name: Continuous Build Docker
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  discover-projects:
    name: Build project matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - id: set-matrix
        run: |
          # Make a string like: [{"project":"armeria"},{"project":"dropwizard"}]
          PROJECTS=$(ls */pom.xml|sed 's~\(.*\)/pom.xml~{"project":"\1"}~g'|tr '\n' ','|sed 's/\(.*\),$/[\1]/')
          echo "::set-output name=matrix::{\"include\":[${PROJECTS}]}"
  build-and-verify-docker:
    name: Build and verify Docker images
    needs: discover-projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        matrix: ${{ fromJson(needs.discover-projects.outputs.matrix) }}
    steps:
      - name: Install Docker
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: 19.03
      - name: Cache docker
        uses: actions/cache@v1
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker
      - name: Build Docker image openzipkin/example-brave:${{ matrix.project }}-test
        run:  docker/build_image ${{ matrix.project }} ${{ matrix.project }}-test
      - name: Verify Docker image openzipkin/example-brave:${{ matrix.project }}-test
        run: |
          # This just makes sure containers run and the HEALTHCHECK works (for now..)
          IMAGE=openzipkin/example-brave:${{ matrix.project }}-test
          docker run --rm --name frontend -d ${IMAGE} frontend
          docker run --rm --name backend -d ${IMAGE} backend
          docker/bin/block-on-health frontend || exit 1
          docker/bin/block-on-health backend || exit 1
