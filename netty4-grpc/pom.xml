<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.zipkin.brave.example</groupId>
    <artifactId>brave-example-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../parent-pom.xml</relativePath>
  </parent>

  <artifactId>brave-example-netty4-grpc</artifactId>
  <packaging>jar</packaging>

  <name>brave-example-netty4-grpc</name>
  <description>Tracing Example: Netty 4.1/Google gRPC 1.34/JRE 15</description>

  <properties>
    <jre.version>15</jre.version>
    <maven.compiler.release>8</maven.compiler.release>

    <grpc.version>1.34.1</grpc.version>
    <protobuf.version>3.12.0</protobuf.version>

    <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
    <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-services</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <!-- Instruments the underlying gRPC requests -->
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-instrumentation-grpc</artifactId>
    </dependency>
    <!-- Instruments the underlying HTTP requests -->
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-instrumentation-netty-codec-http</artifactId>
    </dependency>

    <!-- Integrates so you can use log patterns like %X{traceId}/%X{spanId} -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.30</version>
    </dependency>
    <!-- gRPC uses JUL -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.30</version>
    </dependency>
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-context-slf4j</artifactId>
    </dependency>

    <!-- The below are needed to report traces to http://127.0.0.1:9411/api/v2/spans -->
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-reporter-brave</artifactId>
    </dependency>
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-sender-urlconnection</artifactId>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <!-- When updating backend.proto, rm -rf src/main/java/brave/example/generated
             Then, mvn protobuf:compile protobuf:compile-custom

             See RATIONALE.md for why we can't do this implicitly. -->
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>${protobuf-maven-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>compile-custom</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <clearOutputDirectory>false</clearOutputDirectory>
            <outputDirectory>${project.build.sourceDirectory}</outputDirectory>
            <protocArtifact>
              com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
            </protocArtifact>
            <pluginId>grpc-java</pluginId>
            <pluginArtifact>
              io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
            </pluginArtifact>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
