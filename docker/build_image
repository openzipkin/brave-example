#!/bin/sh
# This script is only a convenience as the build environment is controlled in
# the Dockerfile. That said, it uses only basic shell commands to help it work
# on developer laptops as well as CI nodes. Mainly, this centralizes the base
# Java image mappings and ensures all metadata needed is taken from pom.xml.
set -ue


PROJECT=${1:-armeria}
TAG=${2:-openzipkin/brave-example:test}
OP=${3:-load}
POM="${PROJECT}/pom.xml"

if [ -f "${POM}" ]
then
  DESCRIPTION=$(sed -n 's/.*<description>\(.*\)<\/description>.*/\1/p' "${POM}")
  JRE_VERSION=$(sed -n 's/.*<jre.version>\(.*\)<\/jre.version>.*/\1/p' "${POM}")
else
  echo "Expected ${POM} to exist"
  exit 1
fi

JAVA_VERSION=${JAVA_VERSION:-15.0.1_p9}
# Platforms to eventually push to the registry
PLATFORMS="linux/amd64,linux/arm64"

case "${JRE_VERSION}" in
  6 )
    JRE_IMAGE=ghcr.io/openzipkin/java:6u119-6.22.0.3
    # single arch image
    PLATFORMS=linux/amd64
    ;;
  7 )
    JRE_IMAGE=ghcr.io/openzipkin/java:7u282-7.42.0.13
    # single arch image
    PLATFORMS=linux/amd64
    ;;
  8 )
    JRE_IMAGE=ghcr.io/openzipkin/java:8.252.09-jre
    ;;
  11 )
    JRE_IMAGE=ghcr.io/openzipkin/java:11.0.9_p11-jre
    ;;
  15 )
    JRE_IMAGE=ghcr.io/openzipkin/java:15.0.1_p9-jre
    ;;
  * )
    echo "Invalid JRE_VERSION: ${JRE_VERSION}"
    exit 1
esac

DOCKER_ARGS="-f docker/Dockerfile --tag ${TAG} \
--build-arg project=${PROJECT} --label brave-example=${PROJECT} \
--build-arg jre_image=${JRE_IMAGE} \
--label org.opencontainers.image.source=https://github.com/openzipkin/brave-example \
--label org.opencontainers.image.version=$(git rev-parse --short HEAD) ."

# Avoid buildx for two reasons:
#  * It only supports one platform/arch on load https://github.com/docker/buildx/issues/59
#  * It would pull Docker Hub for moby/buildkit or multiarch/qemu-user-static images, using up quota
if [ "${OP}" = "load" ]; then
  echo "Building image ${TAG} with java_version ${JAVA_VERSION}"
  docker build --label org.opencontainers.image.description="${DESCRIPTION}" ${DOCKER_ARGS}
  exit $?
fi

if [ "${OP}" != "push" ]; then
  echo "Invalid OP: ${OP}, Ex. load or push"
  exit 1
fi


# This can be less manual in the future, for example checking buildx to see what it can do.
ARCH=${ARCH:-$(uname -m)}
case ${ARCH} in
  x86_64* )
    ;;
  amd64* )
    ;;
  * )
    echo Pushing platforms ${PLATFORMS} with arch ${ARCH} is not yet supported.
    exit 1
esac

echo "Pushing image ${TAG} with platforms ${PLATFORMS} and Java version ${JAVA_VERSION}"
docker buildx build --progress plain --platform=${PLATFORMS} \
       --label org.opencontainers.image.description="${DESCRIPTION}" ${DOCKER_ARGS} --push
