# We only use travis to publish our Docker images
dist: focal
language: bash

services:
  - docker


before_install:
  # Ensure Docker buildx is available and can build multi-architecture
  - |
    # Enable experimental features on the server (multi-arch)
    echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
    sudo service docker restart
    # Enable experimental client features (eg docker buildx)
    mkdir -p $HOME/.docker && echo '{"experimental":"enabled"}' > $HOME/.docker/config.json
  - |
    # Add buildx plugin
    BUILDX_VERSION=0.4.2
    BUILDX_URL=https://github.com/docker/buildx/releases/download/v${BUILDX_VERSION}/buildx-v${BUILDX_VERSION}.linux-${TRAVIS_CPU_ARCH}
    mkdir -p $HOME/.docker/cli-plugins
    ( cd $HOME/.docker/cli-plugins && wget -qO- $BUILDX_URL > docker-buildx && chmod 755 docker-buildx)
    docker version
  - |
    # Enable execution of different multi-architecture containers by QEMU and binfmt_misc
    # See https://github.com/multiarch/qemu-user-static
    if [ "$(uname -m)" = "x86_64" ]; then
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    fi
    docker buildx create --name builder --use
  - |
    # Credentials entered into https://travis-ci.org/github/openzipkin/${REPO}/settings are access
    # controlled by branch (typically only master). Check to see if a well-known env is available
    # before attempting to log in.
    if [[ -n "$GH_USER" ]]; then
      # Log in to Docker Hub for releasing the image
      echo "$GH_TOKEN"| docker login ghcr.io -u "$GH_USER" --password-stdin
    fi

script: ./travis/publish.sh

branches:
  only:
    - master

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/ead3c37d57527214e9f2
      - https://webhooks.gitter.im/e/9f1ee2f315d32956f8d6
    on_success: change
    on_failure: always

# When Travis, add to https://travis-ci.org/github/openzipkin/${REPO}/settings
#
# GH_TOKEN=XXX-https://github.com/settings/tokens-XXX
#   - makes release commits and tags, also writes to GHCR if Docker
#   - needs repo:status, public_repo and if Docker write:packages, delete:packages
#   - referenced in .settings.xml
#   - store like this: echo "https://$GH_TOKEN:@github.com" > .git/credentials
# GH_USER=user_that_created_GH_TOKEN